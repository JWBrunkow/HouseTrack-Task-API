name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Check Out Repo
      uses: actions/checkout@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Build and push Docker image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/your-application

        # Build the Docker image
        docker build . --tag $IMAGE_ID:latest --tag $IMAGE_ID:${{ github.sha }}

        # Push the image to GitHub Packages
        docker push $IMAGE_ID:latest
        docker push $IMAGE_ID:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        script: |
          docker pull $IMAGE_ID:latest
          # Add commands to stop the current container, and start a new one with the updated image
          # For example, using Docker Compose might look like:
          cd /path/to/your/project/on/ec2
          docker-compose pull
          docker-compose down
          docker-compose up -d
